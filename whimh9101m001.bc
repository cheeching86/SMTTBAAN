|******************************************************************************
|* whinh9101m0001 0  VRC B61C a  smt 
|* Generate Warehousing Order Transfer (Manual)
|* General_User_NT123                                                                                                      
|* 2015-07-30
|******************************************************************************
|* Main table whinh200 Warehousing Orders, Form Type 4
|******************************************************************************
                                                                                
|****************************** declaration section ***************************
declaration:

#include <bic_dam>
#include <bic_cmf>

  	table	twhinh200 		| Warehousing Orders
	table	twhwmd300		| Locations
	table	twhwmd200		| Warehouse
	table 	twhwmd215		| Warehouse quantity
	table	tticst001		| Estimated and Actual Material Cost
	table	twhinr140		| Inventory
	table	twhltc100		| Lots
	table	ttisfc001		| Production Orders
	table	ttcmcs003		| Warehouses
	table	ttcmcs050		| First Free Number
	table	twhinh010		| Warehousing Order Type
	table	ttdipu010		| Item - Purchase by BP
	table	ttcibd200		| Item - Ordering
	table	ttimfc001		| Production Warehouse Orders
	table	twhinh220		| Outbound Order Lines
	table	twhinp100		| Planned Inventory Transaction by Item
	| table	twhinr900		| Balance On Hand Quantity by Production Order

   	extern	domain	tcpdno		pdno, prod.ord
	extern  domain	tccwoc		cwoc, office, line.num
	extern	domain	whinh.oorg	order.origin
	extern	domain	whinh.ittp	transaction.type
	extern	domain	tcncmp		shipfrom.comp, shipto.comp
	extern	domain	tctyps		shipfrom.type, shipto.type
	extern	domain	tccshp		shipfrom.code, shipto.code
	extern	domain	whloca		shipfrom.loca, shipto.loca
	extern	domain	tcdate		delivery.date, receipt.date
	extern	domain	tcseri		series
	extern	domain	tccotp		order.type
	extern	domain	tcdsca		line.dsca, shipfrom.codedsca, shipto.codedsca, shipfrom.locadsca, 
					shipto.locadsca, series.dsca, office.dsca, order.type.dsca
	extern	domain	tcnrgr		num.grp	
	extern	domain	tcosta		status
	extern	domain	tcclot		lot.num
	extern	domain	tclsel		lot.code
	extern	domain	tcitem		item
	extern	domain	tcqst1		quantity, round.up, quantity.on.hand, extra.trans.quantity
	extern	domain	tcorno		orno, o.num
	extern	domain	tcinvt.date	f.dat, l.dat 
	
	long	curr.compnr, flag, count, set, y, x
	string	pr.device(8)

	#pragma used dll ottstpapihand

|****************************** program section ********************************

before.program:

	import("tisfc001.pdno", prod.ord)
	import("tisfc001.line.no", line.num)
	import("tisfc001.osta", status)
	curr.compnr = get.compnr()

	| *******Check Production Order Status******* |

	if etol(status) < 3 then

		message("Production Order not printed!")
		execute(end.program)
	
	else

		| *******Check Line No. in Production Order******* |

		if isspace(line.num) then
			message("Please fill in the Line No. in Production Order !")
			message("Generate Warehousing Order Require Line No")
			execute(end.program)
		else
			| *******Check Warehousing Order Transfer Exist******* |

			select whinh200.orno, whinh200.refe
			from whinh200
			where whinh200.refe = :prod.ord
			selectdo
				message("Warehousing Order already exist!")
				message("Duplicate Warehouse Order Found!")
				execute(end.program)
			selectempty
				flag = 1
			endselect
		endif
	endif	

|****************************** field section ********************************

field.pdno:
init.field:
	
	disable.fields(READONLY, "pdno")
	pdno = prod.ord

field.cwoc:
init.field:

	disable.fields(READONLY, "cwoc")
	
	|if not isspace(line.num) then
		cwoc = line.num
	|else
	|	cwoc = ""
	|endif

before.checks:

	|select whwmd300.cwar, whwmd300.loca
	|from whwmd300
	|where whwmd300.loca = :cwoc
	|selectdo
	|	shipto.code = whwmd300.cwar
	|	shipto.loca = whwmd300.loca
	|selectempty
	|	shipto.code = ""
	|	shipto.loca = ""
	|endselect 

field.order.origin:
init.field:
	
	disable.fields(READONLY, "order.origin")
	order.origin = whinh.oorg.transfer.man

field.transaction.type:
init.field:
	
	disable.fields(READONLY, "transaction.type")
	transaction.type = whinh.ittp.transfer

field.shipfrom.comp:
init.field:
	
	disable.fields(READONLY, "shipfrom.comp")
	shipfrom.comp = curr.compnr

field.shipto.comp:
init.field:
	
	disable.fields(READONLY, "shipto.comp")
	shipto.comp = curr.compnr

field.shipfrom.type:
init.field:
	
	disable.fields(READONLY, "shipfrom.type")
	shipfrom.type = tctyps.warehouse

field.shipto.type:
init.field:
	
	disable.fields(READONLY, "shipto.type")
	shipto.type = tctyps.warehouse

field.shipfrom.code:
init.field:
	
	| disable.fields(READONLY, "shipfrom.code")
	shipfrom.code = "RAW"

field.shipfrom.codedsca:
init.field:

	select tcmcs003.cwar, tcmcs003.dsca
	from tcmcs003
	where tcmcs003.cwar = :shipfrom.code
	selectdo
		shipfrom.codedsca = tcmcs003.dsca
	selectempty
		shipfrom.codedsca = ""
	endselect

field.shipto.code:
init.field:
	
	|disable.fields(READONLY, "shipto.code")

	select whwmd200.cwar
	from whwmd200
	where whwmd200.cwar = :cwoc
	selectdo
		shipto.code = whwmd200.cwar
	selectempty
		shipto.code = ""
	endselect 

field.shipto.codedsca:
init.field:

	select tcmcs003.cwar, tcmcs003.dsca
	from tcmcs003
	where tcmcs003.cwar = :shipto.code
	selectdo
		shipto.codedsca = tcmcs003.dsca
	selectempty
		shipto.codedsca = ""
	endselect
	
field.shipfrom.loca:
init.field:
	
	disable.fields(READONLY, "shipfrom.loca")
	shipfrom.loca = ""

field.shipto.loca:
init.field:
	
	disable.fields(READONLY, "shipto.loca")
	shipto.loca = ""

	|select whwmd300.loca
	|from whwmd300
	|where whwmd300.loca = :cwoc
	|selectdo
	|	shipto.loca = whwmd300.loca
	|selectempty
	|	shipto.loca = ""
	|endselect 

field.series:
selection.filter:

	num.grp = "330"	
	query.extend.where.in.zoom("tcmcs050.nrgr=" & quoted.string(num.grp))

field.series.dsca:
init.field:

	select tcmcs050.nrgr, tcmcs050.seri, tcmcs050.dsca
	from tcmcs050
	where tcmcs050.nrgr = "330" and tcmcs050.seri = :series
	selectdo
		series.dsca = tcmcs050.dsca
	selectempty
		series.dsca = ""
	endselect

when.field.changes:

	select tcmcs050.nrgr, tcmcs050.seri, tcmcs050.dsca
	from tcmcs050
	where tcmcs050.nrgr = "330" and tcmcs050.seri(1;3) = :series
	selectdo
		series.dsca = tcmcs050.dsca
	selectempty
		series.dsca = ""
	endselect

field.order.type:
init.field:
	
	disable.fields(READONLY, "order.type")
	order.type = "T01"

field.order.type.dsca:
init.field:

	select whinh010.otyp, whinh010.dsca
	from whinh010
	where whinh010.otyp = :order.type
	selectdo
		order.type.dsca = whinh010.dsca
	selectempty
		order.type.dsca = ""
	endselect

field.office:
init.field:
	
	disable.fields(READONLY, "office")
	office = ""
	
|****************************** group section **********************************

group.1:
init.group:
   get.screen.defaults()

|****************************** function **********************************

Functions:

function extern gen.wh.order.trans()
{
	string 	form1.msg(100), form2.msg(100), form3.msg(100), pr.device(8), error.msg(100)
	string	find.msg(100), mark.msg(100), syn.msg(100), func.msg(100), err.msg(100), recover.msg(100), update.msg(100), recover.msg1(100)
	long	ret, ret1, ret2, ret3, ret4, ret5, ret6, ret7, ret8, count, mark_ret, find_ret, crt_ret2, crt_ret3
	domain	tcitem		item
	domain	tcqst1		quantity, round.up, quantity.on.hand, extra.trans.qty, total.on.hand
	domain	tcorno		orno, o.num
	domain	tcinvt.date	i.dat
	domain	tcclot		lot.num
	domain	tclsel		lot.code
	domain	tcqst1		new.spq

	| *******Estimated and Actual Material Cost******* |

	|message("%d", flag)

	if flag = 1 then

		select ticst001.pdno, ticst001.pono, ticst001.sitm, ticst001.ques
		from ticst001
		where ticst001.pdno = :pdno
		selectdo

			item = trim$(ticst001.sitm)
            extra.trans.qty = ticst001.ques
			
			if extra.trans.qty <> 0 then
	
				select min(whinr140.idat):i.dat
				from whinr140
				where whinr140.cwar = :shipfrom.code and whinr140.item = :ticst001.sitm
					and whinr140.qhnd <> 0 
				selectdo

					select whinr140.cwar, whinr140.item, whinr140.idat, whinr140.clot
					from whinr140
					where whinr140.cwar = :shipfrom.code and whinr140.item = :ticst001.sitm
						and whinr140.idat = :i.dat
					selectdo
						|message("%s", whinr140.cwar)

						if whinr140.qhnd < extra.trans.qty then
							|message("Any")
							lot.code = tclsel.any
							lot.num = ""
							quantity = extra.trans.qty
						else
							if whinr140.qhnd > extra.trans.qty then
								|message("Specific")
								lot.code = tclsel.specific
								lot.num = whinr140.clot

								| *******Get Standard Packing Quantity******* |	

								select whltc100.item, whltc100.clot, whltc100.spq, whltc100.bfbp
								from whltc100
								where whltc100.item = :ticst001.sitm and whltc100.clot = :lot.num
								selectdo

									if whltc100.spq < 2 then

										select tdipu010.item, tdipu010.sfbp, tdipu010.qimf
										from tdipu010
										where tdipu010.item = :ticst001.sitm and tdipu010.sfbp = :whltc100.bfbp
										selectdo
	
											if tdipu010.qimf < 2 then
												select tcibd200.item, tcibd200.oqmf
												from tcibd200
												where tcibd200.item = :item
												selectdo
													if tcibd200.oqmf < 2 then
														new.spq = extra.trans.qty
													else
														new.spq = tcibd200.oqmf
													endif
												selectempty
													new.spq = extra.trans.qty
												endselect
											else
												new.spq = tdipu010.qimf
											endif

										selectempty

											select tcibd200.item, tcibd200.oqmf
											from tcibd200
											where tcibd200.item = :item
											selectdo
												if tcibd200.oqmf < 2 then
													new.spq = extra.trans.qty
												else
													new.spq = tcibd200.oqmf
												endif
											selectempty
												new.spq = extra.trans.qty
											endselect
										endselect

									else

										new.spq = whltc100.spq
									endif

								endselect

								round.up = round((extra.trans.qty / new.spq), 0, 2)

								if round.up = 0 then
									quantity = 1 * new.spq
								else
									quantity = round.up * new.spq
								endif
							endif
						endif

					endselect
							
				selectempty
					
					lot.code = tclsel.any
					lot.num = ""
					quantity = extra.trans.qty
					
				endselect

				| *******Get Existing Warehousing Order Transfer******* |

				select whinh200.orno, whinh200.refe
				from whinh200
				where whinh200.refe = :pdno
				selectdo
					orno = trim$(whinh200.orno)
				selectempty
					orno = ""
				endselect
		

				| *******Easy Entry Warehousing Order******* |

				pr.device = "DOCUMENT"

				stpapi.form.command("whinh2100m000", 5, "start.easy.order.entry", form1.msg)

				if not isspace(form1.msg) then

					message("%s", form1.msg)
	
				else

					stpapi.put.field("whinh2202m000", "order.number", str$(orno))
					stpapi.put.field("whinh2202m000", "order.origin", str$(order.origin))
					stpapi.put.field("whinh2202m000", "transaction.type", str$(transaction.type))
					stpapi.put.field("whinh2202m000", "item.segment.1", "         ")
					stpapi.put.field("whinh2202m000", "item.segment.2", str$(item))
					stpapi.put.field("whinh2202m000", "lot.selection", str$(lot.code))
					stpapi.put.field("whinh2202m000", "lot", str$(lot.num))
					stpapi.put.field("whinh2202m000", "qty.storage.unit", str$(quantity))
					stpapi.put.field("whinh2202m000", "shipfrom.code", str$(shipfrom.code))
					stpapi.put.field("whinh2202m000", "item", str$(item))	
					stpapi.put.field("whinh2202m000", "shipto.code", str$(shipto.code))
					stpapi.put.field("whinh2202m000", "shipto.loca", str$(shipto.loca))
					stpapi.put.field("whinh2202m000", "delivery.date", str$(delivery.date))
					stpapi.put.field("whinh2202m000", "receipt.date", str$(receipt.date))
					stpapi.put.field("whinh2202m000", "series", str$(series))
					stpapi.put.field("whinh2202m000", "order.type", str$(order.type))
					stpapi.put.field("whinh2202m000", "order.ref", str$(pdno))

					stpapi.set.report("whinh2202m000", "rwhinh220211000", pr.device, error.msg)

					stpapi.form.command("whinh2202m000", 5, "exec.cont.process", form2.msg)

					if not isspace(form2.msg) then
						message("%s", form2.msg)
					endif

					if not isspace(error.msg) then
						message("%s", error.msg)
					endif 	

					stpapi.end.session("whinh2202m000")
	
				endif

				stpapi.end.session("whinh2100m000")
			endif

			| *******Update Estimated Materials******* |

			|message("%s", ticst001.sitm)

			count = 0

			select ticst001.pdno, ticst001.sitm, ticst001.cwar, ticst001.lsel, ticst001.clot
			from ticst001 for update
			where ticst001.pdno = :pdno and ticst001.pono = :ticst001.pono and ticst001.sitm = :ticst001.sitm
			selectdo
				dal.change.object("ticst001")
				dal.set.field("ticst001.cwar", shipto.code )
				set = dal.save.object("ticst001")
				commit.transaction()

				if set = 0 then
					count = count + 1
				endif		
			endselect

		selectempty

			message("No Estimated Material Line exist!")
			message("Warehousing Order Transfer failed to generate!")

		endselect
	endif

	| *******Get Warehousing Order Number******* |

	if flag = 1 then
	
		select whinh200.orno, whinh200.refe
		from whinh200
		where whinh200.refe = :pdno
		group by whinh200.orno, whinh200.refe
		selectdo
			message("Warehousing Order : %s", whinh200.orno)
		endselect
	endif

}
